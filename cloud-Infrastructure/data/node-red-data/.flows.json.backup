[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "ML and MQTT Subscriber",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e7741acbc4d0c010",
        "type": "tab",
        "label": "DB Controls",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d6c329914ca9c596",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6ca9b774b8ac1908",
        "type": "tab",
        "label": "CSS Styling",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f5279b01.b328d8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "566d95256d190e9f",
        "type": "postgreSQLConfig",
        "name": "PostgresDB",
        "host": "172.100.10.13",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "database",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "1000",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "admin",
        "passwordFieldType": "str"
    },
    {
        "id": "4558b5a479f88a7a",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#457709",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Nosso estilo",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#4B7930",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#4B7930",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#6db046",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#4b7930",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Fitness Monitor",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "4429aae43b37c326",
        "type": "ui_group",
        "name": "Your Caloric Information",
        "tab": "c6f79a2c0e9e2f01",
        "order": 2,
        "disp": true,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c6f79a2c0e9e2f01",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f1571b0d0c85903e",
        "type": "ui_tab",
        "name": "User Info",
        "icon": "person",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5d778ec448492bfb",
        "type": "ui_group",
        "name": "Your personal information",
        "tab": "f1571b0d0c85903e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "629d4cb688713e6b",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "settings",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bfc4c39bf4583c3a",
        "type": "ui_group",
        "name": "Settings",
        "tab": "629d4cb688713e6b",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "67cf9908fe08f1e8",
        "type": "ui_group",
        "name": "Calories burned:",
        "tab": "c6f79a2c0e9e2f01",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "71808ae9c2f6163a",
        "type": "file in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "filename": "/data/trainning.data",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "c67c15e6a0d10fae"
            ]
        ]
    },
    {
        "id": "c67c15e6a0d10fae",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "train",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://app:8000/train",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 120,
        "wires": [
            [
                "265f1ec2a088ad5e"
            ]
        ]
    },
    {
        "id": "265f1ec2a088ad5e",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "Train answer",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "a64daadc9d4dd331",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "Predict Service",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://app:8000/predict",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 380,
        "y": 220,
        "wires": [
            [
                "53a58756d285dbb3"
            ]
        ]
    },
    {
        "id": "5948fcfd2b76b95d",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "idc/FC56323",
        "qos": "2",
        "datatype": "utf8",
        "broker": "f5279b01.b328d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "a64daadc9d4dd331"
            ]
        ]
    },
    {
        "id": "03994f40962dce6a",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Receives client phone info, classifies it and stores it TODO: add to DB",
        "info": "",
        "x": 370,
        "y": 180,
        "wires": []
    },
    {
        "id": "45e35c73cfb74595",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Sends the training data to the ML processor which will train a KNN model with it with with",
        "info": "",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "67f2465bb03e05d5",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "71808ae9c2f6163a"
            ]
        ]
    },
    {
        "id": "517ab78f8a9643ee",
        "type": "postgresql",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "INSERT INTO user_phone_data VALUES ('{{{ msg.payload.date }}}', '{{{ msg.payload.time }}}', {{{ msg.payload.activity }}}, {{{ msg.payload.acceleration_x }}}, {{{ msg.payload.acceleration_y }}}, {{{ msg.payload.acceleration_z }}}, {{{ msg.payload.gyro_x }}}, {{{ msg.payload.gyro_y }}}, {{{ msg.payload.gyro_z }}});\n",
        "postgreSQLConfig": "566d95256d190e9f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 830,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "53a58756d285dbb3",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 1",
        "func": "msg.payload = \"date;time;activity;acceleration_x;acceleration_y;acceleration_z;gyro_x;gyro_y;gyro_z \\n\" + msg.payload\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "d7d69a1c80776d27"
            ]
        ]
    },
    {
        "id": "d7d69a1c80776d27",
        "type": "csv",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "sep": ";",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 670,
        "y": 220,
        "wires": [
            [
                "517ab78f8a9643ee",
                "0ec786a993048655"
            ]
        ]
    },
    {
        "id": "0ec786a993048655",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 7",
        "active": false,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 200,
        "wires": []
    },
    {
        "id": "2c547707cd5b9e7b",
        "type": "file in",
        "z": "e7741acbc4d0c010",
        "name": "",
        "filename": "/data/trainning.data",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 440,
        "wires": [
            [
                "5e1de0b3a3ea18e0"
            ]
        ]
    },
    {
        "id": "5e1de0b3a3ea18e0",
        "type": "csv",
        "z": "e7741acbc4d0c010",
        "name": "",
        "sep": ";",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 510,
        "y": 440,
        "wires": [
            [
                "e3d8bf37fdaa465d"
            ]
        ]
    },
    {
        "id": "1031078df62d838f",
        "type": "postgresql",
        "z": "e7741acbc4d0c010",
        "name": "",
        "query": "INSERT INTO user_phone_data VALUES ('{{{ msg.payload.date }}}', '{{{ msg.payload.time }}}', {{{ msg.payload.activity }}}, {{{ msg.payload.acceleration_x }}}, {{{ msg.payload.acceleration_y }}}, {{{ msg.payload.acceleration_z }}}, {{{ msg.payload.gyro_x }}}, {{{ msg.payload.gyro_y }}}, {{{ msg.payload.gyro_z }}});",
        "postgreSQLConfig": "566d95256d190e9f",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 830,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "082a3570393a3628",
        "type": "debug",
        "z": "e7741acbc4d0c010",
        "name": "Create result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 80,
        "wires": []
    },
    {
        "id": "9410ec301b9ca15e",
        "type": "postgresql",
        "z": "e7741acbc4d0c010",
        "name": "",
        "query": "CREATE TABLE user_phone_data (\n    date VARCHAR(255),\n    time VARCHAR(255),\n    activity INT CHECK (activity IN (0, 1)),\n    acceleration_x FLOAT,\n    acceleration_y FLOAT,\n    acceleration_z FLOAT,\n    gyro_x FLOAT,\n    gyro_y FLOAT,\n    gyro_z FLOAT,\n    PRIMARY KEY (date, time)\n);",
        "postgreSQLConfig": "566d95256d190e9f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "082a3570393a3628"
            ]
        ]
    },
    {
        "id": "9ead1aaa4d753dc3",
        "type": "inject",
        "z": "e7741acbc4d0c010",
        "name": "Creta table",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "9410ec301b9ca15e"
            ]
        ]
    },
    {
        "id": "a290f5de93c62e82",
        "type": "inject",
        "z": "e7741acbc4d0c010",
        "name": "Load traning data",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "2c547707cd5b9e7b"
            ]
        ]
    },
    {
        "id": "e5a7e6661a80276f",
        "type": "debug",
        "z": "e7741acbc4d0c010",
        "name": "Delete result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "8c9aba176a9b2898",
        "type": "postgresql",
        "z": "e7741acbc4d0c010",
        "name": "",
        "query": "DELETE FROM user_phone_data;",
        "postgreSQLConfig": "566d95256d190e9f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "e5a7e6661a80276f"
            ]
        ]
    },
    {
        "id": "7945c52eb0c02e90",
        "type": "inject",
        "z": "e7741acbc4d0c010",
        "name": "Clear table contents",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "8c9aba176a9b2898"
            ]
        ]
    },
    {
        "id": "e3d8bf37fdaa465d",
        "type": "delay",
        "z": "e7741acbc4d0c010",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "300",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": true,
        "outputs": 1,
        "x": 660,
        "y": 440,
        "wires": [
            [
                "1031078df62d838f"
            ]
        ]
    },
    {
        "id": "05abca18221432d5",
        "type": "debug",
        "z": "e7741acbc4d0c010",
        "name": "Count result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.0.count",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "c97655fe639f708c",
        "type": "postgresql",
        "z": "e7741acbc4d0c010",
        "name": "",
        "query": "SELECT COUNT(*) FROM user_phone_data",
        "postgreSQLConfig": "566d95256d190e9f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "05abca18221432d5"
            ]
        ]
    },
    {
        "id": "92873e2bd2733b43",
        "type": "inject",
        "z": "e7741acbc4d0c010",
        "name": "Count table contents",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "c97655fe639f708c"
            ]
        ]
    },
    {
        "id": "d31cc7e35206eb09",
        "type": "comment",
        "z": "e7741acbc4d0c010",
        "name": "Load the data from training data to the DB, so it can be used in calculations and charts, not needed to train model.",
        "info": "",
        "x": 460,
        "y": 400,
        "wires": []
    },
    {
        "id": "2894c71e649539d2",
        "type": "comment",
        "z": "e7741acbc4d0c010",
        "name": "Clear all phone data in the DB",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "cf215da0b4daaa99",
        "type": "comment",
        "z": "e7741acbc4d0c010",
        "name": "Create table for phone data in DB",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "68ee830e8b74a5d7",
        "type": "comment",
        "z": "e7741acbc4d0c010",
        "name": "Count the entries in phone data table in DB",
        "info": "",
        "x": 260,
        "y": 280,
        "wires": []
    },
    {
        "id": "6305476c22694738",
        "type": "comment",
        "z": "e7741acbc4d0c010",
        "name": "ATTENTION! This takes up to 6 minutes and might crash depending on the system. Rate can be reduced to increse stability at the cost of time",
        "info": "",
        "x": 550,
        "y": 480,
        "wires": []
    },
    {
        "id": "8841da6e18a929f0",
        "type": "ui_chart",
        "z": "d6c329914ca9c596",
        "name": "",
        "group": "4429aae43b37c326",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "Calorie Consuption",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "No activity for the selected day (or missing info)",
        "dot": false,
        "ymin": "0",
        "ymax": "30",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "7debea1c8fc1048b",
        "type": "ui_dropdown",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Age",
        "tooltip": "",
        "place": "Select age range",
        "group": "5d778ec448492bfb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "20 to 29",
                "value": 2,
                "type": "num"
            },
            {
                "label": "30 to 39",
                "value": "3",
                "type": "str"
            },
            {
                "label": "40 to 49",
                "value": "4",
                "type": "str"
            },
            {
                "label": "50 to 59",
                "value": "5",
                "type": "str"
            },
            {
                "label": "60 to 69",
                "value": "6",
                "type": "str"
            },
            {
                "label": "70 to 79",
                "value": "7",
                "type": "str"
            },
            {
                "label": "80 to 89",
                "value": "8",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "d614d03dbc80f6cd"
            ]
        ]
    },
    {
        "id": "a19db59d2893123c",
        "type": "ui_text_input",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Weight (kg)",
        "tooltip": "",
        "group": "5d778ec448492bfb",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "1",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "d1606ab8b46b083c"
            ]
        ]
    },
    {
        "id": "734238773bf2a564",
        "type": "ui_dropdown",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Gender",
        "tooltip": "",
        "place": "Select gender",
        "group": "5d778ec448492bfb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Male",
                "value": "M",
                "type": "str"
            },
            {
                "label": "Female",
                "value": "F",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 100,
        "y": 300,
        "wires": [
            [
                "ee41390d6d07e323"
            ]
        ]
    },
    {
        "id": "8d12acf7e01b49b3",
        "type": "ui_date_picker",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Date",
        "group": "4429aae43b37c326",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "26dadb0e5e8e81b1"
            ]
        ]
    },
    {
        "id": "d614d03dbc80f6cd",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "83efde91ac7f43d9",
                "314c7a2c2ddb25cf"
            ]
        ]
    },
    {
        "id": "d1606ab8b46b083c",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "weight",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "83efde91ac7f43d9",
                "314c7a2c2ddb25cf"
            ]
        ]
    },
    {
        "id": "ee41390d6d07e323",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gender",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 300,
        "wires": [
            [
                "83efde91ac7f43d9",
                "314c7a2c2ddb25cf"
            ]
        ]
    },
    {
        "id": "26dadb0e5e8e81b1",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "date",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 420,
        "wires": [
            [
                "83efde91ac7f43d9"
            ]
        ]
    },
    {
        "id": "a88a32c83179c55f",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "height",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "83efde91ac7f43d9",
                "314c7a2c2ddb25cf"
            ]
        ]
    },
    {
        "id": "5b1fa12941257777",
        "type": "ui_text_input",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Height (cm)",
        "tooltip": "",
        "group": "5d778ec448492bfb",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "1",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "a88a32c83179c55f"
            ]
        ]
    },
    {
        "id": "32b80f416b60e62c",
        "type": "postgresql",
        "z": "d6c329914ca9c596",
        "name": "",
        "query": "SELECT time, activity\nFROM user_phone_data\nWHERE date = '{{{msg.payload}}}'\n/*WHERE SUBSTRING(date, 4, 2) = '{{{msg.payload}}}';*/",
        "postgreSQLConfig": "566d95256d190e9f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 450,
        "y": 600,
        "wires": [
            [
                "04e36d29a5c4ec36"
            ]
        ]
    },
    {
        "id": "49821b580309f835",
        "type": "function",
        "z": "d6c329914ca9c596",
        "name": "Get and format date for query",
        "func": "//Adding 12h (43200000 ms) is a simple way to get around the daylight saving time problem\nlet date = new Date(global.get(\"date\") + 43200000)\nmsg.payload = \n    (date.getDate() < 10 ? \"0\" : \"\") + date.getDate() + \"/\" +\n    (date.getMonth() + 1 < 10 ? \"0\" : \"\") + (date.getMonth() + 1) + \"/\" + \n    (date.getFullYear() - 2000 < 10 ? \"0\" : \"\") + (date.getFullYear() - 2000)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 600,
        "wires": [
            [
                "32b80f416b60e62c"
            ]
        ]
    },
    {
        "id": "04e36d29a5c4ec36",
        "type": "function",
        "z": "d6c329914ca9c596",
        "name": "Reduce to one per minute",
        "func": "if(msg.payload.length == 0)\n    return msg\n\nfunction timeToMinutes(time) {\n    let [hours, minutes, seconds] = time.split(':').map(Number)\n    return Math.round(hours * 60 + minutes + seconds/60)\n}\n\nlet counters = new Map()\n\nfor (let element of msg.payload) {\n    if(counters.get(timeToMinutes(element.time)) == undefined){\n        counters.set(timeToMinutes(element.time), {walking : 0, running: 0})\n    }\n    if(element.activity)\n        counters.get(timeToMinutes(element.time)).running++;\n    else\n        counters.get(timeToMinutes(element.time)).walking++;\n}\n\n\nlet jump = true\n\nmsg.payload = []\nmsg.minutes = []\n\nfor (let m = 0; m < 1440; m++) {\n    let value = counters.get(m)\n    if(value){\n        if(value.running > value.walking)\n            msg.payload.push(1)\n        else\n            msg.payload.push(0)\n        jump = false\n        msg.minutes.push(m)\n    }\n    else if (!jump){\n            msg.payload.push(null)\n        jump = true\n        msg.minutes.push(m)\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 600,
        "wires": [
            [
                "e79d928988479d36"
            ]
        ]
    },
    {
        "id": "591676ad0652b1c5",
        "type": "ui_ui_control",
        "z": "d6c329914ca9c596",
        "name": "",
        "events": "change",
        "x": 100,
        "y": 380,
        "wires": [
            [
                "55e0a5142dd35db4"
            ]
        ]
    },
    {
        "id": "83efde91ac7f43d9",
        "type": "function",
        "z": "d6c329914ca9c596",
        "name": "Check if info, date and period is present",
        "func": "if(\n    !msg.tab && (\n    global.get(\"age\") &&\n    global.get(\"weight\") &&\n    global.get(\"gender\") &&\n    global.get(\"height\") &&\n    global.get(\"date\") &&\n    global.get(\"period\")) \n){\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 380,
        "wires": [
            [
                "51b0665da8aa29d5"
            ]
        ]
    },
    {
        "id": "55e0a5142dd35db4",
        "type": "delay",
        "z": "d6c329914ca9c596",
        "name": "",
        "pauseType": "rate",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 310,
        "y": 380,
        "wires": [
            [
                "83efde91ac7f43d9",
                "314c7a2c2ddb25cf"
            ]
        ]
    },
    {
        "id": "8230ba53c5b608f9",
        "type": "ui_text",
        "z": "d6c329914ca9c596",
        "group": "67cf9908fe08f1e8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Today:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 270,
        "y": 700,
        "wires": []
    },
    {
        "id": "4edabed895ed0ee0",
        "type": "ui_text",
        "z": "d6c329914ca9c596",
        "group": "67cf9908fe08f1e8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "This week:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 740,
        "wires": []
    },
    {
        "id": "3f59ba744b423683",
        "type": "ui_text",
        "z": "d6c329914ca9c596",
        "group": "67cf9908fe08f1e8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "This month:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 780,
        "wires": []
    },
    {
        "id": "bf0c97628dea71e8",
        "type": "ui_slider",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Daily walking threshold (minutes)",
        "tooltip": "",
        "group": "bfc4c39bf4583c3a",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "120",
        "step": "15",
        "className": "",
        "x": 180,
        "y": 880,
        "wires": [
            [
                "225bc9b18e7bacd8"
            ]
        ]
    },
    {
        "id": "9f278712df827d23",
        "type": "comment",
        "z": "d6c329914ca9c596",
        "name": "Obtain user info and other inputs",
        "info": "",
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "4a0e932c44646be8",
        "type": "link in",
        "z": "d6c329914ca9c596",
        "name": "link in 1",
        "links": [
            "51b0665da8aa29d5"
        ],
        "x": 55,
        "y": 600,
        "wires": [
            [
                "49821b580309f835"
            ]
        ]
    },
    {
        "id": "51b0665da8aa29d5",
        "type": "link out",
        "z": "d6c329914ca9c596",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "4a0e932c44646be8"
        ],
        "x": 835,
        "y": 380,
        "wires": []
    },
    {
        "id": "053d457e84065668",
        "type": "comment",
        "z": "d6c329914ca9c596",
        "name": "Update the chart",
        "info": "",
        "x": 140,
        "y": 560,
        "wires": []
    },
    {
        "id": "308ca807f578609a",
        "type": "comment",
        "z": "d6c329914ca9c596",
        "name": "Update the calorie counters",
        "info": "",
        "x": 180,
        "y": 660,
        "wires": []
    },
    {
        "id": "90c776b85692a363",
        "type": "comment",
        "z": "d6c329914ca9c596",
        "name": "Get threshold settings",
        "info": "",
        "x": 160,
        "y": 840,
        "wires": []
    },
    {
        "id": "7b1185f6a35e9c97",
        "type": "ui_slider",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Daily running threshold (minutes)",
        "tooltip": "",
        "group": "bfc4c39bf4583c3a",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "120",
        "step": "15",
        "className": "",
        "x": 180,
        "y": 920,
        "wires": [
            [
                "9d4058bf531961dd"
            ]
        ]
    },
    {
        "id": "12127ab281dc7016",
        "type": "ui_toast",
        "z": "d6c329914ca9c596",
        "position": "top right",
        "displayTime": "5",
        "highlight": "#457709",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 790,
        "y": 320,
        "wires": []
    },
    {
        "id": "314c7a2c2ddb25cf",
        "type": "function",
        "z": "d6c329914ca9c596",
        "name": "Check if info is missing",
        "func": "if(\n    msg.tab == 0 && (\n    !global.get(\"age\") ||\n    !global.get(\"weight\") ||\n    !global.get(\"gender\") ||\n    !global.get(\"height\"))\n){\n    msg.payload = \"Please fill-in the missing personal information.\"\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 320,
        "wires": [
            [
                "12127ab281dc7016"
            ]
        ]
    },
    {
        "id": "225bc9b18e7bacd8",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "walking_threshold",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "9d4058bf531961dd",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "running_threshold",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "e79d928988479d36",
        "type": "link call",
        "z": "d6c329914ca9c596",
        "name": "Calorie calculator",
        "links": [
            "47e3b0882b8e5a83"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 870,
        "y": 600,
        "wires": [
            [
                "e7f7bae9ed1624b5"
            ]
        ]
    },
    {
        "id": "47e3b0882b8e5a83",
        "type": "link in",
        "z": "d6c329914ca9c596",
        "name": "Calorie in",
        "links": [],
        "x": 55,
        "y": 120,
        "wires": [
            [
                "a4a69d3023f619dd"
            ]
        ]
    },
    {
        "id": "d7e3c757c9390afa",
        "type": "link out",
        "z": "d6c329914ca9c596",
        "name": "Calorie out",
        "mode": "return",
        "links": [],
        "x": 305,
        "y": 120,
        "wires": []
    },
    {
        "id": "a4a69d3023f619dd",
        "type": "function",
        "z": "d6c329914ca9c596",
        "name": "Calcualte calories",
        "func": "if(msg.payload.length == 0)\n    return msg\n\nlet velocity_map = new Map([\n    [JSON.stringify([2, \"M\"]), 1.36],\n    [JSON.stringify([2, \"F\"]), 1.34],\n    [JSON.stringify([3, \"M\"]), 1.43],\n    [JSON.stringify([3, \"F\"]), 1.34],\n    [JSON.stringify([4, \"M\"]), 1.43],\n    [JSON.stringify([4, \"F\"]), 1.39],\n    [JSON.stringify([5, \"M\"]), 1.43],\n    [JSON.stringify([5, \"F\"]), 1.32],\n    [JSON.stringify([6, \"M\"]), 1.34],\n    [JSON.stringify([6, \"F\"]), 1.24],\n    [JSON.stringify([7, \"M\"]), 1.26],\n    [JSON.stringify([7, \"F\"]), 1.13],\n    [JSON.stringify([8, \"M\"]), 0.97],\n    [JSON.stringify([8, \"F\"]), 0.94]\n]);\n\n//Obtaining user info\nlet age = global.get(\"age\")\nlet weight = global.get(\"weight\")\nlet gender = global.get(\"gender\")\nlet height = global.get(\"height\")\n\n//Getting velocity from the table\nlet velocity = velocity_map.get(JSON.stringify([age, gender]))\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    //Convert the non null activities to calories\n    if (msg.payload[i] != null){\n        let calories = 0.035 * weight + ((velocity + (velocity * msg.payload[i])) ** 2) / (height/100) * 0.029 * weight\n        msg.payload[i] = Math.round(calories * 1000) / 1000\n    }\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 120,
        "wires": [
            [
                "d7e3c757c9390afa"
            ]
        ]
    },
    {
        "id": "6cc12dec39b583b0",
        "type": "comment",
        "z": "d6c329914ca9c596",
        "name": "Calorie calculator",
        "info": "",
        "x": 140,
        "y": 80,
        "wires": []
    },
    {
        "id": "e7f7bae9ed1624b5",
        "type": "function",
        "z": "d6c329914ca9c596",
        "name": "Format to chart",
        "func": "if(msg.payload.length == 0)\n    return msg\n\nlet new_payload = [{\n\"series\": [],\n\"data\": [[]],\n\"labels\": [\"\"]\n}]\n\nfor (let m = 0; m < msg.minutes.length; m++) {\n    new_payload[0].data[0].push({x: msg.minutes[m] * 60 * 1000, y: msg.payload[m]})\n}\n\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 600,
        "wires": [
            [
                "8841da6e18a929f0"
            ]
        ]
    },
    {
        "id": "1ff99c451571a9f0",
        "type": "ui_dropdown",
        "z": "d6c329914ca9c596",
        "name": "",
        "label": "Period",
        "tooltip": "",
        "place": "Select period",
        "group": "4429aae43b37c326",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "D",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "W",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "M",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "110b15d5af128e0d"
            ]
        ]
    },
    {
        "id": "110b15d5af128e0d",
        "type": "change",
        "z": "d6c329914ca9c596",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "period",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 460,
        "wires": [
            [
                "83efde91ac7f43d9"
            ]
        ]
    },
    {
        "id": "7987918428dd0e13",
        "type": "ui_template",
        "z": "6ca9b774b8ac1908",
        "group": "4429aae43b37c326",
        "name": "Home style",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<Style>\n    /* Estilo global Home */\n    ui-card-panel {\n        border-radius: 5px;\n    }\n    /*Estilo para os elementos dentro dos grupos */\n    ui-card-panel * {\n        border-radius: 2.5px;\n    }\n    /* Estilo titulo: !important para dar override às settings do node-red */\n    .nr-dashboard-cardtitle {\n        font-weight: bold !important;\n    }\n    h1 {\n        font-weight: bold !important;\n    }\n</Style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "2676604bbd514f6e",
        "type": "ui_template",
        "z": "6ca9b774b8ac1908",
        "group": "5d778ec448492bfb",
        "name": "User info Style",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<Style>\n    /* Estilo global Home */\n    ui-card-panel {\n        border-radius: 5px;\n    }\n\n    /*Estilo para os elementos dentro dos grupos */\n    ui-card-panel * {\n        border-radius: 2.5px;\n    }\n\n    /* Estilo titulo: !important para dar override às settings do node-red */\n    .nr-dashboard-cardtitle {\n        font-weight: bold !important;\n    }\n\n    h1 {\n        font-weight: bold !important;\n    }\n</Style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "77bc7884c565ad5f",
        "type": "ui_template",
        "z": "6ca9b774b8ac1908",
        "group": "bfc4c39bf4583c3a",
        "name": "Settings Style",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<Style>\n    /* Estilo global Home */\n    ui-card-panel {\n        border-radius: 5px;\n    }\n\n    /*Estilo para os elementos dentro dos grupos */\n    ui-card-panel * {\n        border-radius: 2.5px;\n    }\n\n    /* Estilo titulo: !important para dar override às settings do node-red */\n    .nr-dashboard-cardtitle {\n        font-weight: bold !important;\n    }\n\n    h1 {\n        font-weight: bold !important;\n    }\n</Style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 60,
        "wires": [
            []
        ]
    }
]